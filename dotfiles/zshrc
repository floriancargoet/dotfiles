
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt appendhistory autocd extendedglob nomatch sharehistory
unsetopt beep
bindkey -e
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename "${HOME}/.zshrc"

autoload -Uz compinit
compinit
# End of lines added by compinstall

zstyle ':completion:*:descriptions' format '%U%B%d%b%u'
zstyle ':completion:*:warnings' format '%BSorry, no matches for: %d%b'
zstyle ':completion:*:sudo:*' command-path /usr/local/sbin /usr/local/bin \
                             /usr/sbin /usr/bin /sbin /bin /usr/X11R6/bin

zstyle ':completion:*:rm:*' ignore-line yes
zstyle ':completion:*:mv:*' ignore-line yes
zstyle ':completion:*:cp:*' ignore-line yes

zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric

# cache for completion
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh_cache
# colors for completion
# try kill <tab>
zmodload zsh/complist
zstyle ':completion:*:*:kill:*:processes' list-colors "=(#b) #([0-9]#)*=36=31"

# Correction
setopt correctall


#git prompt
setopt promptsubst
autoload -U promptinit
promptinit
prompt wunjo #you need to install that prompt first

# grep color
export GREP_COLOR=31
alias grep='grep --color=auto'

# favorite text editor
export EDITOR=/usr/bin/vim

#add ~/bin to PATH
export PATH=${PATH}:${HOME}/bin/

#PATH where cd search a directory. works with completion.
#export CDPATH='~:/tmp'

# lesspipe allows less to read binary files
# .deb, .tar.gz, etc.

eval $(lesspipe)

#coloration ls
d=.dircolors 
test -r $d && eval "$(dircolors $d)" # check for .dircolors file and load it with dircolors

#z script
if [ -f ${HOME}/dev/tools/z/z.sh ]; then
    source ${HOME}/dev/tools/z/z.sh
    function precmd () {
        z --add "$(pwd -P)"
    }
fi

#git wrapper for git root (can't use aliases or script for cd)
function git(){
    if [ $1 = 'root' ]; then
        cd $(git rev-parse --show-toplevel)
    else
        /usr/bin/git $* 
    fi
}

#import aliases
source ~/.shell_aliases #shared aliases between different shells
source ~/.shell_aliases_private #you don't need that ;-)
